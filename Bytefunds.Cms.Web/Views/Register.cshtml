@inherits Umbraco.Web.Mvc.UmbracoTemplatePage
@{
    Layout = "_Layout.cshtml";
    MemberRegisterViewModel registerModel = new MemberRegisterViewModel();
    Html.EnableClientValidation();
    Html.EnableUnobtrusiveJavaScript();
}

<section class="clearfix">
    <div class="container register">
        <div class="row">
            <div class="form-block center-block p-20 light-gray-bg border-clear text-left">
                <h2 class="title">注册</h2>
                <form class="form-horizontal" role="form" action="/umbraco/Api/Member/Regsiter" method="post">
                    <div class="form-group has-feedback">
                        @Html.LabelFor(m => registerModel.Name, new { @class = "col-sm-3 control-label" })
                        @*<label for="inputUserName" class="col-sm-3 control-label">姓名<span class="text-danger small">*</span></label>*@
                        <div class="col-sm-8">
                            @*<input type="text" class="form-control" id="inputUserName" placeholder="Your Name" required onfocus="$(this).attr('placeholder','')" onblur="$(this).attr('placeholder','Your Name')">*@
                            <div>
                                @Html.TextBoxFor(m => registerModel.Name, new { @class = "form-control", placeholder = "请输入您的姓名" })
                                <i class="fa fa-user form-control-feedback"></i>
                            </div>
                            @Html.ValidationMessageFor(m => registerModel.Name)
                        </div>
                    </div>
                    <div class="form-group has-feedback">
                        @Html.LabelFor(m => registerModel.Phone, new { @class = "col-sm-3 control-label" })
                        <div class="col-sm-8">
                            <div>
                                @Html.TextBoxFor(m => registerModel.Phone, new { @class = "form-control", placeholder = "请输入您的手机号" })
                                <i class="fa fa-phone form-control-feedback"></i>
                            </div>
                            @Html.ValidationMessageFor(m => registerModel.Phone)
                        </div>

                    </div>
                    <div class="form-group has-feedback">
                        @Html.LabelFor(m => registerModel.Email, new { @class = "col-sm-3 control-label" })
                        <div class="col-sm-8">
                            <div>
                                @Html.TextBoxFor(m => registerModel.Email, new { @class = "form-control", placeholder = "请输入您的邮箱" })
                                <i class="fa fa-envelope form-control-feedback"></i>
                            </div>
                            @Html.ValidationMessageFor(m => registerModel.Email)
                        </div>
                    </div>
                    <div class="form-group has-feedback">
                        @Html.LabelFor(m => registerModel.Password, new { @class = "col-sm-3 control-label" })
                        <div class="col-sm-8">
                            <div>
                                @Html.PasswordFor(m => registerModel.Password, new { @class = "form-control", placeholder = "请输入您的密码" })
                                <i class="fa fa-lock form-control-feedback"></i>
                            </div>
                            @Html.ValidationMessageFor(m => registerModel.Password)
                        </div>
                    </div>
                    <div class="form-group has-feedback">
                        @Html.LabelFor(m => registerModel.Code, new { @class = "col-sm-3 control-label" })
                        <div class="col-sm-8">
                            <div class="row">
                                <div class="col-xs-6">
                                    <div>
                                        @Html.TextBoxFor(m => registerModel.Code, new { @class = "form-control", placeholder = "验证码" })
                                    </div>
                                    @Html.ValidationMessageFor(m => registerModel.Code)
                                </div>
                                <div class="col-xs-6">
                                    <button class="btn btn-group btn-warning margin-clear" data-href="/umbraco/Api/Member/GetCode" id="btncode">获取验证码</button>
                                </div>
                            </div>
                        </div>

                    </div>
                    @*<div class="form-group has-feedback">
                            <label for="rePassword" class="col-sm-3 control-label">重复密码<span class="text-danger small">*</span></label>
                            <div class="col-sm-8">
                                <input type="password" class="form-control" id="rePassword" placeholder="Repeat Password" required onfocus="$(this).attr('placeholder','')" onblur="$(this).attr('placeholder','Repeat Password')">
                                <i class="fa fa-lock form-control-feedback"></i>
                            </div>
                        </div>*@
                    <div class="form-group">
                        <div class="col-sm-offset-3 col-sm-8 submit-btn">
                            <button type="submit" class="btn btn-group btn-warning btn-animated">注册<i class="fa fa-check"></i></button>
                            <span>已经有账号, <a href="/login">立即登录</a></span>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
</section>
@section scripts{
    <script>
        $(function () {
            $("#btncode").click(function () {
                if ($("#registerModel_Email").val() == "") {
                    finAlert("请先输入注册邮箱！", false);
                    return false;
                }
                $(this).attr("disabled", true);
                $.get($(this).data("href"), { email: $("#registerModel_Email").val() }, function (result) {
                    if (result) {
                        finAlert("验证码发送成功", true);
                        var times = 120;
                        var interval = setInterval(function () {
                            $("#btncode").text(times + "s后重新发送");
                            times--;
                            if (times <= 0) {
                                clearInterval(interval);
                                $("#btncode").text("获取验证码").attr("disabled", false);
                            }
                        }, 1000);
                    }
                    else {
                        finAlert("验证码发送失败，请重新发送", false);
                    }
                });
                return false;
            });
        });
    </script>
}