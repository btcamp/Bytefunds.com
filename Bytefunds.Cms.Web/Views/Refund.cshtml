@inherits Umbraco.Web.Mvc.UmbracoTemplatePage
@{
    Layout = "_Layout.cshtml";
    WithdrawViewModel withdrawModel = new WithdrawViewModel();
    Html.EnableClientValidation();
    Html.EnableUnobtrusiveJavaScript();
    string id = Request.QueryString["chipsId"];

    IContent content = ApplicationContext.Services.ContentService.GetById(int.Parse(id));

    string title = content.GetValue<string>("chipsProduct");
    string amount = content.GetValue<string>("amount");
    if (!Members.IsLoggedIn())
    {
        <script>
            window.onload = function () {
                location.href = "/login";
            }
        </script>
    }
    else
    {
        <section class="clearfix">
            <div class="container register withdraw" style="margin-bottom:30px;">
                <div class="row">
                    <div class="form-block center-block p-20 light-gray-bg border-clear text-left">
                        <h2 class="title">申请退款</h2>
                        <form class="form-horizontal" role="form" action="/umbraco/Api/Member/Refund" method="post">
                            <div class="form-group has-feedback">
                                <label class="col-sm-3 control-label">众筹产品</label>
                                <div class="col-sm-8">
                                    <div>
                                        <input type="text" value="@title" disabled="disabled" class="form-control" />
                                        <i class="fa fa-star form-control-feedback"></i>
                                    </div>
                                </div>
                            </div>
                            <div class="form-group has-feedback">
                                <label class="col-sm-3 control-label">众筹金额</label>
                                <div class="col-sm-8">
                                    <div>
                                        <input type="text" value="@amount" disabled="disabled" class="form-control" />
                                        <i class="fa fa-money form-control-feedback"></i>
                                    </div>
                                </div>
                            </div>
                            <div class="form-group has-feedback">
                                @Html.LabelFor(m => withdrawModel.Name, new { @class = "col-sm-3 control-label" })
                                @*<label for="inputUserName" class="col-sm-3 control-label">姓名<span class="text-danger small">*</span></label>*@
                                <div class="col-sm-8">
                                    @*<input type="text" class="form-control" id="inputUserName" placeholder="Your Name" required onfocus="$(this).attr('placeholder','')" onblur="$(this).attr('placeholder','Your Name')">*@
                                    <div>
                                        @Html.TextBoxFor(m => withdrawModel.Name, new { @class = "form-control", placeholder = "请输入您的开户人" })
                                        <i class="fa fa-user form-control-feedback"></i>
                                    </div>
                                    @Html.ValidationMessageFor(m => withdrawModel.Name)
                                </div>
                            </div>
                            <div class="form-group has-feedback">
                                @Html.LabelFor(m => withdrawModel.BankName, new { @class = "col-sm-3 control-label" })
                                <div class="col-sm-8">
                                    <div>
                                        @Html.TextBoxFor(m => withdrawModel.BankName, new { @class = "form-control", placeholder = "请输入开户行" })
                                        <i class="fa fa-bank form-control-feedback"></i>
                                    </div>
                                    @Html.ValidationMessageFor(m => withdrawModel.BankName)
                                </div>

                            </div>
                            <div class="form-group has-feedback">
                                @Html.LabelFor(m => withdrawModel.BankDetail, new { @class = "col-sm-3 control-label" })
                                <div class="col-sm-8">
                                    <div>
                                        @Html.TextBoxFor(m => withdrawModel.BankDetail, new { @class = "form-control", placeholder = "请输入开户行分行" })
                                        <i class="fa fa-bank form-control-feedback"></i>
                                    </div>
                                    @Html.ValidationMessageFor(m => withdrawModel.BankDetail)
                                </div>
                            </div>
                            <div class="form-group has-feedback">
                                @Html.LabelFor(m => withdrawModel.BankNumber, new { @class = "col-sm-3 control-label" })
                                <div class="col-sm-8">
                                    <div>
                                        @Html.TextBoxFor(m => withdrawModel.BankNumber, new { @class = "form-control", placeholder = "请输入您的银行卡卡号" })
                                        <i class="fa fa-credit-card form-control-feedback"></i>
                                    </div>
                                    @Html.ValidationMessageFor(m => withdrawModel.BankNumber)
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-sm-offset-3 col-sm-9 submit-btn">
                                    <button type="submit" class="btn btn-group btn-warning btn-animated">申请退款<i class="fa fa-check"></i></button>
                                    <input type="hidden" name="chipsId" value="@id" />
                                </div>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </section>

    }
}

